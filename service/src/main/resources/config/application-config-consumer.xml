<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/integration/kafka
	http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
	http://www.springframework.org/schema/integration
	http://www.springframework.org/schema/integration/spring-integration.xsd
	http://code.alibabatech.com/schema/dubbo
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd">



    <bean id="monitorListener" class="com.fang.global.kafka.impl.KafkaConsumer2ServiceImpl">
        <property name="TOPIC" value="dubbo-monitor-topic"/>
    </bean>
    <dubbo:service interface="com.fang.service.kafka.KafkaConsumerServer"  ref="monitorListener" protocol="dubbo"/>
    <bean id="kafkaProducerServer" class="com.fang.global.kafka.impl.KafkaProducerServerImpl">
        <property name="kafkaProvider" ref="kafkaProvider"/>
    </bean>

    <dubbo:service interface="com.fang.service.kafka.KafkaProducerServer"  ref="kafkaProducerServer"  />

    <int:service-activator auto-startup="true" input-channel="kafkaConsumer" ref="monitorListener" method="consumerKafkaMessage">
    </int:service-activator>

    <int-kafka:zookeeper-connect id="zookeeperConnect" zk-connect="${kafka.zookeeper.address}"
                                 zk-connection-timeout="6000" zk-session-timeout="4000" zk-sync-time="2000"/>
    <int-kafka:inbound-channel-adapter auto-startup="true"  kafka-consumer-context-ref="consumerContext" channel="kafkaConsumer"/>
    <int-kafka:consumer-context id="consumerContext" zookeeper-connect="zookeeperConnect"
                                consumer-properties="consumerProperties" consumer-timeout="4000">
        <int-kafka:consumer-configurations>
            <int-kafka:consumer-configuration group-id="myself" max-messages="5000"
                                              key-decoder="kafkaDecoder" value-decoder="kafkaDecoder">
               <!-- <int-kafka:topic id="${kafka.monitor.topic}" streams="4"/> -->
                <int-kafka:topic id="xueci" streams="4"/>
            </int-kafka:consumer-configuration>
        </int-kafka:consumer-configurations>
    </int-kafka:consumer-context>

    <beans:bean id="kafkaDecoder" class="org.springframework.integration.kafka.serializer.common.StringDecoder">
        <beans:constructor-arg value="UTF-8"/>
    </beans:bean>
    <beans:bean id="consumerProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <beans:property name="properties">
            <beans:props>
                <beans:prop key="topic.metadata.refresh.interval.ms">
                    ${kafka.topic.metadata.refresh.interval.ms}
                </beans:prop>
                <beans:prop key="message.send.max.retries">${kafka.message.send.max.retries}</beans:prop>
                <beans:prop key="send.buffer.bytes">${kafka.send.buffer.bytes}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="location" value="classpath:dubbo.properties" />
    </bean>

    <bean id="monitorService" class="com.fang.global.kafka.impl.KafkaConsumer2ServiceImpl">
        <property name="statisticsDirectory" value="${dubbo.statistics.directory}" />
        <property name="chartsDirectory" value="${dubbo.charts.directory}" />
    </bean>

    <dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner}" />

    <dubbo:registry address="${dubbo.registry.address}" />

    <dubbo:reference id="registryService" interface="com.alibaba.dubbo.registry.RegistryService" />

</beans>







